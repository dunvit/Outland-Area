<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAIAAABvFaqvAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAWlJREFUOE/tkUtPwkAUhc2QNmXRlC5kIZGNGiwJFKyKSHm1GqBaaH1BMCiJCQuj
        iRiMGv+818ylmZY2sHDJl7OYOffMKTNskH9iXbSckCLL7vWHI+O8hfs54IBv2Q7u/QSLtKPjq9sB1WYy
        iS4hsPZ8yKDLECyqN82ue02VUbLoEgJrz4cMugzBos6l7alUrqBLyKleY0foMoRc7azVporFYtOP7/fP
        n7fZF6w9f6WrwYGGYYKUbLaoHb5MZ1Q5tZDLq3QEGUwzBIuASrUGEkXxoutMnl+p4F1kWaYjzPnxFcXj
        cbVQLJ2UQfDZ8dPE0/3DGBw6ggwk8cwcLOJ4/kDTWG2lUpl9ZTh6pNrZ3dtOpwMZOEWPA1gEX8gvwPP8
        TX/wp7sBx3HoMrC/K+SNWLqOC7J7Lu6jiSxKJBJNw2x3LKpavSFJEs7CCCkSBMEwzSjBFHN+Qorg5rpe
        jdLi/0VZ8karsy5aBiG/Dep3W1excM8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAIAAABvFaqvAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAXNJREFUOE/VkVtLAlEUhWNEdEAcobnkBElYdtFMrBxvBRVm0g2vmFRIgQ+FgVFB
        Qf+9zVlDD8etE9FDLdbDt8/efA8zM8ov5T+Knt8/XJoab9Ho9c2lqfEQ2fb88OnFHabGQ5TJbt0/jqK2
        7c6Tw4ty+SKgUq0NHoZzUVdULO8BxsOIfD5fobwLzjn5erM1q+sYv97Hw4hUVXUKJXC72+vfDRqtDkZ6
        9/v9YCmMKBQK7Th58HX/FsVI70FVBUvhRdntHPjy6gbFSO/B4LdFK6tr9LPAnW4PJQ4EAvQ+6Q8yovRm
        hhqJRIgb7Q5KbFkWVuJKDiNKbaSpmhBd1JsosWlaWIkrOYxoPZmkappGfHp2jhKbpomVuJLDfyMqRMe1
        E5TYMEysxJUcRrScSFAhqhxVUWLDMLASV3IYUTy+RA2Hw8T7B4coMYmwEldyGNGiCET4KPguuq5jJa7k
        MKKFWIwKUbFUQolJhJW4ksOIfpa/JlKUT+IRURVYT3wNAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>