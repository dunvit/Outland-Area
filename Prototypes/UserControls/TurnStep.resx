<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="oaSmallPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zU7/x/8HkwJfKUoJxbMAAAAASUVORK5CYII=
</value>
  </data>
</root>